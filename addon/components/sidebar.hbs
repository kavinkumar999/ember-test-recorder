{{#if @isOpen}}
  <div class="test-recorder-sidebar">
    <div class="sidebar-header">
      <h2 class="sidebar-title {{if this.isRecording 'recording'}}">Test Recorder</h2>
      <button type="button" class="close-button" {{on "click" @onClose}}>Ã—</button>
    </div>

    <div class="sidebar-tabs">
      <button 
        type="button" 
        class="tab-button {{if this.isRecorderTab 'active'}}" 
        {{on "click" (fn this.setActiveTab "recorder")}}
      >
        Recorder
      </button>
      <button 
        type="button" 
        class="tab-button {{if this.isEventsTab 'active'}}" 
        {{on "click" (fn this.setActiveTab "events")}}
      >
        Events Config
      </button>
    </div>

    {{#if this.isRecorderTab}}
      <div class="button-group">
        <button 
          type="button"
          class="test-action-button record-button {{if this.isRecording 'recording' 'not-recording'}}"
          {{on "click" this.toggleRecording}}
        >
          <svg class="button-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            {{#if this.isRecording}}
              <rect x="6" y="6" width="12" height="12" rx="2" ry="2"></rect>
            {{else}}
              <polygon points="5 3 19 12 5 21 5 3"></polygon>
            {{/if}}
          </svg>
          {{if this.isRecording "Stop Recording" "Start Recording"}}
        </button>
      </div>

      <div class="assertion-mode-container">
        <div class="assertion-mode-header">
          <div class="assertion-mode-toggle">
            <span class="toggle-label">Assertion Mode</span>
            <label class="toggle-switch">
              <input 
                type="checkbox" 
                checked={{this.assertionMode}}
                {{on "change" this.toggleAssertionMode}}
              >
              <span class="toggle-slider"></span>
            </label>
          </div>
        </div>
        
        {{#if this.assertionMode}}
          <div class="assertion-options">
            <label class="radio-option">
              <input 
                type="radio" 
                name="assertionType" 
                value="ok"
                checked={{eq this.assertionType "ok"}}
                {{on "change" (fn this.setAssertionType "ok")}}
              >
              <span class="radio-label">assert.ok</span>
            </label>
            <label class="radio-option">
              <input 
                type="radio" 
                name="assertionType" 
                value="dom"
                checked={{eq this.assertionType "dom"}}
                {{on "change" (fn this.setAssertionType "dom")}}
              >
              <span class="radio-label">assert.dom</span>
            </label>
          </div>
        {{/if}}
      </div>

      <div class="tests-container">
        <div class="tests-header">
          <h3 class="tests-header-title">Generated Tests</h3>
          <div class="tests-header-actions">
            <button type="button" class="test-icon-button copy-button" title="Copy Tests" {{on "click" this.copyTests}}>
              <svg class="button-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
              </svg>
            </button>
            <button type="button" class="test-icon-button clear-button" title="Clear Tests" {{on "click" this.clearTests}}>
              <svg class="button-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
              </svg>
            </button>
          </div>
        </div>
        <div class="tests-content">
          {{#if (eq this.testCases.length 0)}}
            <div class="empty-state">
              <svg class="button-icon empty-state-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z" />
              </svg>
              <p>No tests generated yet</p>
            </div>
          {{else}}
            {{#each this.testCases as |test|}}
              <div class="test-item-container">
                <pre class="test-item">{{test.code}}</pre>
                <button 
                  type="button" 
                  class="test-icon-button remove-button" 
                  title="Remove Test"
                  {{on "click" (fn this.removeTest test.index)}}
                >
                  <svg class="button-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M20 12H4" />
                  </svg>
                </button>
              </div>
            {{/each}}
          {{/if}}
        </div>
      </div>
    {{else}}
      <div class="events-config-container">
        <div class="events-header">
          <h3>Event Configuration</h3>
        </div>
        {{#each this.events as |event|}}
          <div class="event-toggle-item {{if event.enabled 'enabled'}}">
            <div class="event-info">
              <div class="event-header">
                <span class="event-name">{{event.name}}</span>
              </div>
              <span class="event-description">{{event.description}}</span>
            </div>
            <label class="toggle-switch">
              <input 
                type="checkbox" 
                checked={{event.enabled}}
                {{on "change" (fn this.toggleEvent event.id)}}
              >
              <span class="toggle-slider"></span>
            </label>
          </div>
        {{/each}}
      </div>
    {{/if}}
  </div>
{{/if}}
